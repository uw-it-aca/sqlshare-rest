"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

GOOGLE_OAUTH_KEY = 'xxx'
GOOGLE_OAUTH_SECRET = 'xxx'

GOOGLE_OAUTH2_CLIENT_ID = GOOGLE_OAUTH_KEY
GOOGLE_OAUTH2_CLIENT_SECRET = GOOGLE_OAUTH_SECRET
GOOGLE_OAUTH2_SCOPES = ('https://www.googleapis.com/auth/plus.login',
                        'https://www.googleapis.com/auth/userinfo.email')

#GOOGLE_RETURN_URL = 'http://rest.anise.com:8000/google_return'
AUTHZ_GROUP_BACKEND = 'authz_group.authz_implementation.all_ok.AllOK'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'oauth2_provider',
    'sqlshare_rest',
    'compressor',
    'supporttools',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'travis-ci.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'travis-ci.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

import os
if os.environ['DB'] == "sqlite3":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
elif os.environ['DB'] == "postgresql":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'sqlshare_app',
            'USER': 'ss_admin',
            'HOST': 'localhost',
            'PASSWORD': 'woijh3u43948',
        }
    }

elif os.environ['DB'] == "mysql":
    try:
        import pymysql
        pymysql.install_as_MySQLdb()
    except ImportError:
        pass

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'sqlshare_app',
            'USER': 'sqlshare_user',
            'PASSWORD': 'ss_pass',
        }
    }
elif os.environ['DB'] == "azure":
    SQLSHARE_IS_AZURE = True
    DATABASES = {
        'default': {
            'ENGINE': 'django_pyodbc',
            'NAME': "sqlshare",
            'USER': 'sqlshare-travis-admin',
            'PASSWORD': os.environ['AZURE_DB_PASSWORD'],
            'OPTIONS': {
                'dsn': "Azure",
                'autocommit': True,
                'extra_params': 'TDS_Version=8.0;PORT=1433',
            }

        }
    }
else:
    raise Exception("Unconfigured DB engine: %s" % os.environ['DB'])



# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
from oauth2_provider.settings import oauth2_settings
oauth2_settings.ALLOWED_REDIRECT_URI_SCHEMES = ['oob', 'http', 'https']

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
SQLSHARE_SHARING_URL_FORMAT = "http://anise:8001/sqlshare/dataset/%s"
SQLSHARE_DETAIL_URL_FORMAT = "http://anise:8001/detail/%s/%s"
SQLSHARE_WEB_URL = 'http://anise:8001/'

STATIC_ROOT = '/tmp/sqlshare_rest_statics'
