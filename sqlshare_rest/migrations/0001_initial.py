# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-19 00:04
from __future__ import unicode_literals

import dirtyfields.dirtyfields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import oauth2client.contrib.django_util.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CredentialsModel',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('credential', oauth2client.contrib.django_util.models.CredentialsField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('sql', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_shared', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('popularity', models.IntegerField(default=0)),
                ('last_viewed', models.DateTimeField(null=True)),
                ('preview_is_finished', models.BooleanField(default=False)),
                ('preview_error', models.TextField(null=True)),
                ('rows_total', models.IntegerField(null=True)),
                ('snapshot_started', models.NullBooleanField()),
                ('snapshot_finished', models.NullBooleanField()),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DatasetSharingEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=100, null=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('date_sent', models.DateTimeField(null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.Dataset')),
            ],
        ),
        migrations.CreateModel(
            name='DatasetTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.Dataset')),
            ],
        ),
        migrations.CreateModel(
            name='DownloadToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32)),
                ('sql', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_parser_values', models.BooleanField(default=False)),
                ('has_column_header', models.NullBooleanField()),
                ('delimiter', models.CharField(max_length=5, null=True)),
                ('column_list', models.TextField(null=True)),
                ('sample_data', models.TextField(null=True)),
                ('user_file', models.FileField(upload_to=b'user_files/%Y/%m/%d')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('dataset_created', models.BooleanField(db_index=True, default=False)),
                ('has_error', models.BooleanField(default=False)),
                ('error', models.TextField(null=True)),
                ('dataset_name', models.TextField(null=True)),
                ('dataset_description', models.TextField(null=True)),
                ('dataset_is_public', models.NullBooleanField()),
                ('is_started', models.BooleanField(default=False)),
                ('is_finalized', models.NullBooleanField(db_index=True)),
                ('rows_total', models.IntegerField(null=True)),
                ('rows_loaded', models.IntegerField(null=True)),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.Dataset')),
            ],
        ),
        migrations.CreateModel(
            name='LogoutToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sql', models.TextField(null=True)),
                ('is_finished', models.BooleanField(default=False)),
                ('is_started', models.BooleanField(default=False)),
                ('has_error', models.BooleanField(default=False)),
                ('error', models.TextField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(null=True)),
                ('rows_total', models.IntegerField(null=True)),
                ('process_queue_id', models.IntegerField(null=True)),
                ('terminated', models.BooleanField(default=False)),
                ('preview_content', models.TextField(null=True)),
                ('query_plan', models.TextField(null=True)),
                ('query_time', models.FloatField(null=True)),
                ('total_time', models.FloatField(null=True)),
                ('is_ui_preview', models.NullBooleanField()),
                ('is_preview_for', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.Dataset')),
            ],
        ),
        migrations.CreateModel(
            name='RecentDatasetView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.Dataset')),
            ],
        ),
        migrations.CreateModel(
            name='SharingEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(db_index=True, max_length=200)),
                ('popularity', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=200, unique=True)),
                ('schema', models.CharField(max_length=200, unique=True)),
                ('db_username', models.CharField(db_index=True, max_length=250, unique=True)),
                ('db_password', models.CharField(max_length=200)),
                ('override_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.User')),
            ],
        ),
        migrations.AddField(
            model_name='recentdatasetview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.User'),
        ),
        migrations.AddField(
            model_name='query',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.User'),
        ),
        migrations.AddField(
            model_name='logouttoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.User'),
        ),
        migrations.AddField(
            model_name='fileupload',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.User'),
        ),
        migrations.AddField(
            model_name='downloadtoken',
            name='original_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.User'),
        ),
        migrations.AddField(
            model_name='datasettag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.Tag'),
        ),
        migrations.AddField(
            model_name='datasettag',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.User'),
        ),
        migrations.AddField(
            model_name='datasetsharingemail',
            name='email',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.SharingEmail'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.User'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='shared_with',
            field=models.ManyToManyField(related_name='shared_with', to='sqlshare_rest.User'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='snapshot_source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sqlshare_rest.Dataset'),
        ),
        migrations.AlterUniqueTogether(
            name='recentdatasetview',
            unique_together=set([('dataset', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='datasettag',
            unique_together=set([('tag', 'dataset')]),
        ),
        migrations.AlterUniqueTogether(
            name='dataset',
            unique_together=set([('name', 'owner')]),
        ),
    ]
